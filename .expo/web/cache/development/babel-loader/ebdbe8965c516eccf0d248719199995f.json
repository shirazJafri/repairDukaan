{"ast":null,"code":"var _jsxFileName = \"D:\\\\LogIn\\\\index.js\";\nimport { registerRootComponent } from 'expo';\nimport App from \"./App\";\nimport store from \"./redux/storeConfig\";\nexport default function main() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }));\n}\nregisterRootComponent(App);","map":{"version":3,"sources":["D:/LogIn/index.js"],"names":["registerRootComponent","App","store","main"],"mappings":";AAAA,SAASA,qBAAT,QAAsC,MAAtC;AAEA,OAAOC,GAAP;AAEA,OAAOC,KAAP;AAKA,eAAe,SAASC,IAAT,GAAgB;AAC3B,SACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAID,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;AACDF,qBAAqB,CAACC,GAAD,CAArB","sourcesContent":["import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\nimport store from \"./redux/storeConfig\"\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nexport default function main() {\n    return (\n        <Provider store = {store}>\n            <App />\n        </Provider>\n    )\n}\nregisterRootComponent(App);\n"]},"metadata":{},"sourceType":"module"}