{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\LogIn\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { registerRootComponent } from 'expo';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport logInReducer from \"./reducers/logIn\";\nimport App from \"./App\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { render } from 'react-dom';\nimport { Component } from 'react';\nvar store = createStore(logInReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nvar Root = function (_Component) {\n  _inherits(Root, _Component);\n\n  var _super = _createSuper(Root);\n\n  function Root() {\n    _classCallCheck(this, Root);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Root, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, React.createElement(App, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Root;\n}(Component);\n\nAppRegistry.registerComponent(\"App\", function () {\n  return Root;\n});","map":{"version":3,"sources":["D:/LogIn/index.js"],"names":["registerRootComponent","createStore","Provider","logInReducer","App","render","Component","store","window","__REDUX_DEVTOOLS_EXTENSION__","Root","AppRegistry","registerComponent"],"mappings":";;;;;;;;;;;AAAA,SAASA,qBAAT,QAAsC,MAAtC;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,YAAP;AAEA,OAAOC,GAAP;;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,IAAMC,KAAK,GAAGN,WAAW,CAACE,YAAD,EAAgBK,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAAvD,CAAzB;;IAEMC,I;;;;;;;;;;;;;WACF,kBAAS;AACT,aACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAIH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKC;;;;EAPcD,S;;AAanBK,WAAW,CAACC,iBAAZ,CAA8B,KAA9B,EAAqC;AAAA,SAAMF,IAAN;AAAA,CAArC","sourcesContent":["import { registerRootComponent } from 'expo';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport logInReducer from './reducers/logIn'\n\nimport App from './App';\nimport { AppRegistry } from 'react-native';\nimport { render } from 'react-dom';\nimport { Component } from 'react';\n\nconst store = createStore(logInReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nclass Root extends Component {\n    render() {\n    return (\n        <Provider store = {store}>\n            <App />\n        </Provider>\n    )\n    }\n}\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nAppRegistry.registerComponent(\"App\", () => Root);"]},"metadata":{},"sourceType":"module"}