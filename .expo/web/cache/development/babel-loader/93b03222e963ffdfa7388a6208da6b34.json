{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\LogIn\\\\screens\\\\UpdatePassword.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nfunction UpdatePassword(_ref) {\n  var authState = _ref.authState,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPassword = _useState2[0],\n      setCurrentPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newPassword = _useState4[0],\n      setNewPassword = _useState4[1];\n\n  var handleUpdatePassword = function handleUpdatePassword() {\n    return _regeneratorRuntime.async(function handleUpdatePassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"http://192.168.1.108:3000/api/customer/change\", {\n              currentPassword: currentPassword,\n              newPassword: newPassword\n            }, {\n              headers: {\n                \"token\": authState.token\n              }\n            }).then(function (response) {\n              Alert.alert('Change of Password Successful!');\n              console.log(response.data.message);\n              navigation.navigate('Profile');\n            }).catch(function (error) {\n              Alert.alert(\"Change of Password Unsuccessful!\");\n              console.log(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Repair Dukaan\"), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    value: currentPassword,\n    placeholder: \"Current Password\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: setCurrentPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    value: newPassword,\n    placeholder: \"New Password\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: setNewPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: handleUpdatePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Update Password\")));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#003f5c',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30,\n    marginBottom: 20\n  },\n  loginText: {\n    color: \"white\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authState: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, null)(UpdatePassword);","map":{"version":3,"sources":["D:/LogIn/screens/UpdatePassword.js"],"names":["React","useState","axios","connect","UpdatePassword","authState","navigation","currentPassword","setCurrentPassword","newPassword","setNewPassword","handleUpdatePassword","post","headers","token","then","response","Alert","alert","console","log","data","message","navigate","catch","error","styles","container","logo","inputView","inputText","loginBtn","loginText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","color","marginBottom","width","borderRadius","height","padding","marginTop","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, SafeAreaView, TextInput, Text, Alert, View, Image, TouchableOpacity } from 'react-native';\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction UpdatePassword({ authState, navigation }) {\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n\r\n    const handleUpdatePassword = async () => {\r\n        await axios.post(\"http://192.168.1.108:3000/api/customer/change\", {currentPassword, newPassword}, {\r\n            headers: {\r\n                \"token\": authState.token\r\n            }\r\n        })\r\n        .then((response) => {\r\n            Alert.alert('Change of Password Successful!')\r\n            console.log(response.data.message);\r\n            navigation.navigate('Profile')\r\n        })\r\n        .catch((error) => {\r\n            Alert.alert(\"Change of Password Unsuccessful!\")\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <SafeAreaView style = {styles.container}>\r\n            <Text style={styles.logo}>Repair Dukaan</Text>\r\n            <View style={styles.inputView}>\r\n                <TextInput\r\n                    style={styles.inputText}\r\n                    value = {currentPassword}\r\n                    placeholder = 'Current Password'\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={setCurrentPassword}\r\n                />\r\n            </View>\r\n            <View style={styles.inputView}>\r\n                <TextInput\r\n                    style={styles.inputText}\r\n                    value = {newPassword}\r\n                    placeholder = 'New Password'\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={setNewPassword}\r\n                />\r\n            </View>\r\n            <TouchableOpacity style={styles.loginBtn} onPress={handleUpdatePassword}>\r\n                <Text style={styles.loginText}>Update Password</Text>\r\n            </TouchableOpacity>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#003f5c',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    logo: {\r\n        fontWeight:\"bold\",\r\n        fontSize:50,\r\n        color:\"#fb5b5a\",\r\n        marginBottom:40,\r\n      },\r\n      inputView:{\r\n        width:\"80%\",\r\n        backgroundColor:\"#465881\",\r\n        borderRadius:25,\r\n        height:50,\r\n        marginBottom:20,\r\n        justifyContent:\"center\",\r\n        padding:20\r\n      },\r\n      inputText:{\r\n        height:50,\r\n        color:\"white\"\r\n      },\r\n      loginBtn:{\r\n        width:\"80%\",\r\n        backgroundColor:\"#fb5b5a\",\r\n        borderRadius:25,\r\n        height:50,\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n        marginTop:30,\r\n        marginBottom:20\r\n      },\r\n      loginText:{\r\n        color:\"white\"\r\n      }\r\n})\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authState: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(UpdatePassword);"]},"metadata":{},"sourceType":"module"}