{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\LogIn\\\\screens\\\\LogInForm.js\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport signIn from \"../redux\";\n\nfunction LogInForm(_ref) {\n  var authState = _ref.authState,\n      logIn = _ref.logIn,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleLogIn = function handleLogIn() {\n    if (authState.loading) {\n      console.log(\"Loading\");\n    } else if (authState.error) {\n      console.log(authState.error);\n    } else {\n      logIn(email, password);\n      navigation.navigate(\"\");\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"Repair Dukaan\"), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Email\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: setEmail,\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#003f5c\",\n    secureTextEntry: true,\n    onChangeText: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: handleLogIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RegisterScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Sign Up\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authState: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, email, password) {\n  return {\n    logIn: function logIn() {\n      return dispatch(signIn(email, password));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#003f5c',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30,\n    marginBottom: 20\n  },\n  loginText: {\n    color: \"white\"\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm);","map":{"version":3,"sources":["D:/LogIn/screens/LogInForm.js"],"names":["axios","React","useEffect","AsyncStorage","useState","connect","signIn","LogInForm","authState","logIn","navigation","email","setEmail","password","setPassword","handleLogIn","loading","console","log","error","navigate","styles","container","logo","inputView","inputText","loginBtn","loginText","mapStateToProps","state","mapDispatchToProps","dispatch","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","color","marginBottom","width","borderRadius","height","padding","marginTop"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport React, { useEffect } from \"react\"\r\nimport {Text, View, TextInput, TouchableOpacity, StyleSheet, SafeAreaView, Alert} from \"react-native\"\r\nimport AsyncStorage from '@react-native-community/async-storage'\r\nimport { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport signIn from '../redux'\r\n\r\nfunction LogInForm( {authState, logIn, navigation} ) {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    \r\n    /*const initialEmail = {\r\n      email: \"\"\r\n    }\r\n\r\n    const initialPassword = {\r\n      password: \"\"\r\n    }*/\r\n\r\n    const handleLogIn = () => {\r\n      if (authState.loading) {\r\n        console.log(\"Loading\")\r\n      }\r\n      else if (authState.error) {\r\n          console.log(authState.error)\r\n      }\r\n      else {\r\n          logIn(email, password)\r\n          navigation.navigate(\"\")\r\n      }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n    <SafeAreaView style = {styles.container}>\r\n    <Text style = {styles.logo}>Repair Dukaan</Text>\r\n      <View style = {styles.inputView}>\r\n          <TextInput  \r\n            style={styles.inputText}\r\n            placeholder=\"Email\" \r\n            placeholderTextColor=\"#003f5c\"\r\n            onChangeText = {setEmail}\r\n            keyboardType = 'email-address'\r\n          />\r\n      </View>\r\n      <View style = {styles.inputView}>\r\n          <TextInput  \r\n            style={styles.inputText}\r\n            placeholder=\"Password\" \r\n            placeholderTextColor=\"#003f5c\"\r\n            secureTextEntry = {true}\r\n            onChangeText = {setPassword}\r\n          />\r\n      </View>\r\n      <TouchableOpacity style={styles.loginBtn} onPress = {handleLogIn}>\r\n          <Text style={styles.loginText}>LOGIN</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress = {() => navigation.navigate('RegisterScreen')}>\r\n          <Text style={styles.loginText}>Sign Up</Text>\r\n      </TouchableOpacity>\r\n      </SafeAreaView>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      authState: state\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, email, password) => {\r\n  return {\r\n      logIn: () => dispatch(signIn(email, password))\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#003f5c',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    logo: {\r\n        fontWeight:\"bold\",\r\n        fontSize:50,\r\n        color:\"#fb5b5a\",\r\n        marginBottom:40,\r\n      },\r\n      inputView:{\r\n        width:\"80%\",\r\n        backgroundColor:\"#465881\",\r\n        borderRadius:25,\r\n        height:50,\r\n        marginBottom:20,\r\n        justifyContent:\"center\",\r\n        padding:20\r\n      },\r\n      inputText:{\r\n        height:50,\r\n        color:\"white\"\r\n      },\r\n      loginBtn:{\r\n        width:\"80%\",\r\n        backgroundColor:\"#fb5b5a\",\r\n        borderRadius:25,\r\n        height:50,\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n        marginTop:30,\r\n        marginBottom:20\r\n      },\r\n      loginText:{\r\n        color:\"white\"\r\n      }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm);\r\n"]},"metadata":{},"sourceType":"module"}