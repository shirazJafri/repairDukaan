{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _SVGIcon = _interopRequireDefault(require(\"./SVGIcon\"));\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Icon/Icon.tsx\";\n\nvar Icon = function Icon(_ref, ref) {\n  var as = _ref.as,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"as\"]);\n\n  var _usePropsResolution = (0, _hooks.usePropsResolution)('Icon', props),\n      size = _usePropsResolution.size,\n      color = _usePropsResolution.color,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"size\", \"color\"]);\n\n  var hexColor = (0, _hooks.useToken)('colors', color || '');\n  var themeSize = parseInt((0, _hooks.useToken)('space', size || ''), 10);\n\n  if (!as) {\n    return _react.default.createElement(_SVGIcon.default, (0, _extends2.default)({}, props, {\n      ref: ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  var asWithProps = _react.default.cloneElement(as, (0, _extends2.default)({}, as.props, {\n    color: hexColor,\n    size: themeSize\n  }));\n\n  return _react.default.createElement(_Box.default, (0, _extends2.default)({}, resolvedProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }), asWithProps);\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Icon));\n\nexports.default = _default;","map":{"version":3,"sources":["Icon.tsx"],"names":["Icon","as","props","size","color","resolvedProps","hexColor","themeSize","parseInt","asWithProps","React"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AAEA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,aAAA,CAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,UAAA,CAAA;;;;;AAEA,IAAMA,IAAI,GAAJA,SAAAA,IAAAA,CAAO,IAAPA,EAAO,GAAPA,EAAoD;AAA1CC,MAAAA,EAA0C,GAAA,IAAA,CAA1CA,EAAAA;AAAAA,MAAOC,KAAmC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,IAAA,CAAA,CAA1CD;;AAA0C,MAAA,mBAAA,GACd,CAAA,GAAA,MAAA,CAAA,kBAAA,EAAA,MAAA,EADc,KACd,CADc;AAAA,MAChDE,IADgD,GAAA,mBAAA,CAAA,IAAA;AAAA,MAC1CC,KAD0C,GAAA,mBAAA,CAAA,KAAA;AAAA,MAChCC,aADgC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CAAA,CAAA;;AAExD,MAAMC,QAAQ,GAAG,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,QAAA,EAAmBF,KAAK,IAAzC,EAAiB,CAAjB;AACA,MAAMG,SAAS,GAAGC,QAAQ,CAAC,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,OAAA,EAAkBL,IAAI,IAAvB,EAAC,CAAD,EAA1B,EAA0B,CAA1B;;AACA,MAAI,CAAJ,EAAA,EAAS;AACP,WAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA;AAAoB,MAAA,GAAG,EAAvB,GAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAP;AAAO;AAAA,KAAA,CAAA,CAAP;AAGF;;AAAA,MAAMM,WAAW,GAAGC,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,EAAAA,EAAAA,CAAAA,GAAAA,SAAAA,CAAAA,OAAAA,EAAAA,EAAAA,EACfT,EAAE,CADaS,KAAAA,EAAAA;AAElBN,IAAAA,KAAK,EAFaM,QAAAA;AAGlBP,IAAAA,IAAI,EAHN;AAAoBO,GAAAA,CAAAA,CAApB;;AAMA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,aAAA,EAAA;AAAwB,IAAA,GAAG,EAA3B,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EADF,WACE,CADF;AAdF,CAAA;;eAqBe,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,MAAA,CAAA,UAAA,EAAL,IAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from '../../../hooks';\nimport type { IIconProps } from './types';\nimport SVGIcon from './SVGIcon';\nimport Box from '../Box';\n\nconst Icon = ({ as, ...props }: IIconProps, ref?: any) => {\n  const { size, color, ...resolvedProps } = usePropsResolution('Icon', props);\n  const hexColor = useToken('colors', color || '');\n  const themeSize = parseInt(useToken('space', size || ''), 10);\n  if (!as) {\n    return <SVGIcon {...props} ref={ref} />;\n  }\n\n  const asWithProps = React.cloneElement(as, {\n    ...as.props,\n    color: hexColor,\n    size: themeSize,\n  });\n\n  return (\n    <Box {...resolvedProps} ref={ref}>\n      {asWithProps}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Icon));\n"]},"metadata":{},"sourceType":"script"}