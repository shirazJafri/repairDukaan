{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shiraz Jafri\\\\Documents\\\\LogIn\\\\screens\\\\LogInForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useState } from \"react\";\nexport default function LogInForm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"email\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"password\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var initialEmail = {\n    email: \"\"\n  };\n  var initialPassword = {\n    password: \"\"\n  };\n\n  var handleLogIn = function handleLogIn() {\n    return _regeneratorRuntime.async(function handleLogIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post('http://192.168.1.108:3000/login/customer', {\n              email: email,\n              password: password\n            }).then(function (response) {\n              console.log(response);\n\n              if (response.data.token) {\n                localStorage.setItem(\"token\", response.data.token);\n              }\n\n              Alert.alert('Log In Successful!');\n              setEmail(_objectSpread({}, initialEmail));\n              setPassword(_objectSpread({}, initialPassword));\n              navigation.navigate('Profile');\n            }).catch(function (error) {\n              console.log(error);\n              Alert.alert(\"Log In Unsuccessful!\");\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"Repair Dukaan\"), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Email\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: setEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#003f5c\",\n    secureTextEntry: true,\n    onChangeText: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: handleLogIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RegisterScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Sign Up\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#003f5c',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30,\n    marginBottom: 20\n  },\n  loginText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Shiraz Jafri/Documents/LogIn/screens/LogInForm.js"],"names":["axios","React","useEffect","useState","LogInForm","navigation","email","setEmail","password","setPassword","initialEmail","initialPassword","handleLogIn","post","then","response","console","log","data","token","localStorage","setItem","Alert","alert","navigate","catch","error","styles","container","logo","inputView","inputText","loginBtn","loginText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","color","marginBottom","width","borderRadius","height","padding","marginTop"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport React, { useEffect } from \"react\"\r\nimport {Text, View, TextInput, TouchableOpacity, StyleSheet, SafeAreaView, Alert} from \"react-native\"\r\nimport { useState } from \"react\"\r\n\r\nexport default function LogInForm( {navigation} ) {\r\n    const [email, setEmail] = useState(\"email\")\r\n    const [password, setPassword] = useState(\"password\")\r\n\r\n    /*useEffect(() => {\r\n      initialiseValues()\r\n    }, [])*/\r\n\r\n    /*const initialiseValues = () => {\r\n      setEmail(\"\")\r\n      setPassword(\"\")\r\n    }*/\r\n\r\n    const initialEmail = {\r\n      email: \"\"\r\n    }\r\n\r\n    const initialPassword = {\r\n      password: \"\"\r\n    }\r\n\r\n    const handleLogIn = async () => {\r\n        await axios.post('http://192.168.1.108:3000/login/customer', {email, password})\r\n            .then((response) => {\r\n                console.log(response)\r\n                if(response.data.token) {\r\n                  localStorage.setItem(\"token\", response.data.token)\r\n                }\r\n                Alert.alert('Log In Successful!')\r\n                setEmail({...initialEmail})\r\n                setPassword({...initialPassword})\r\n                navigation.navigate('Profile')\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                Alert.alert(\"Log In Unsuccessful!\")\r\n            })\r\n    }\r\n\r\n    return (\r\n    <SafeAreaView style = {styles.container}>\r\n    <Text style = {styles.logo}>Repair Dukaan</Text>\r\n      <View style = {styles.inputView}>\r\n          <TextInput  \r\n            style={styles.inputText}\r\n            placeholder=\"Email\" \r\n            placeholderTextColor=\"#003f5c\"\r\n            onChangeText = {setEmail}\r\n          />\r\n      </View>\r\n      <View style = {styles.inputView}>\r\n          <TextInput  \r\n            style={styles.inputText}\r\n            placeholder=\"Password\" \r\n            placeholderTextColor=\"#003f5c\"\r\n            secureTextEntry = {true}\r\n            onChangeText = {setPassword}\r\n          />\r\n      </View>\r\n      <TouchableOpacity style={styles.loginBtn} onPress = {handleLogIn}>\r\n          <Text style={styles.loginText}>LOGIN</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress = {() => navigation.navigate('RegisterScreen')}>\r\n          <Text style={styles.loginText}>Sign Up</Text>\r\n      </TouchableOpacity>\r\n      </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#003f5c',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    logo: {\r\n        fontWeight:\"bold\",\r\n        fontSize:50,\r\n        color:\"#fb5b5a\",\r\n        marginBottom:40,\r\n      },\r\n      inputView:{\r\n        width:\"80%\",\r\n        backgroundColor:\"#465881\",\r\n        borderRadius:25,\r\n        height:50,\r\n        marginBottom:20,\r\n        justifyContent:\"center\",\r\n        padding:20\r\n      },\r\n      inputText:{\r\n        height:50,\r\n        color:\"white\"\r\n      },\r\n      loginBtn:{\r\n        width:\"80%\",\r\n        backgroundColor:\"#fb5b5a\",\r\n        borderRadius:25,\r\n        height:50,\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n        marginTop:30,\r\n        marginBottom:20\r\n      },\r\n      loginText:{\r\n        color:\"white\"\r\n      }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}