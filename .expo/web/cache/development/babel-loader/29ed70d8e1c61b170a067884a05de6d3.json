{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\LogIn\\\\screens\\\\DrawerNagivation.js\";\n\nimport Contact from \"./Contact\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Home from \"./Home\";\nimport Rates from \"./RatesScreen\";\nimport HowToUse from \"./HowToUse\";\nimport Report from \"./Report\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { signOut } from \"../redux\";\nimport { connect } from 'react-redux';\nvar MapStack = createStackNavigator();\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nvar NavigationDrawerStructure = function NavigationDrawerStructure(props) {\n  var toggleDrawer = function toggleDrawer() {\n    props.navigationProps.toggleDrawer();\n  };\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: toggleDrawer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png'\n    },\n    style: {\n      width: 25,\n      height: 25,\n      marginLeft: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\nfunction ContactStack(_ref) {\n  var _this2 = this;\n\n  var navigation = _ref.navigation;\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Contact\",\n    component: Contact,\n    options: {\n      title: 'REPAIR DUKAAN',\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 42\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction HowToUseStack(_ref2) {\n  var _this3 = this;\n\n  var navigation = _ref2.navigation;\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"How To Use\",\n    component: HowToUse,\n    options: {\n      title: 'REPAIR DUKAAN',\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 42\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction RatesStack(_ref3) {\n  var _this4 = this;\n\n  var navigation = _ref3.navigation;\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Rates\",\n    component: Rates,\n    options: {\n      title: 'REPAIR DUKAAN',\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 42\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ReportStack(_ref4) {\n  var _this5 = this;\n\n  var navigation = _ref4.navigation;\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Report\",\n    component: Report,\n    options: {\n      title: 'REPAIR DUKAAN',\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 42\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction HomeStack(_ref5) {\n  var _this6 = this;\n\n  var navigation = _ref5.navigation;\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        fontSize: 42\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      title: 'REPAIR DUKAAN'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar handleLogOut = function handleLogOut(props, loggingOut) {\n  loggingOut();\n  props.navigation.navigate(\"LogIn\");\n};\n\nfunction DrawerNagivation(_ref6) {\n  var _this7 = this;\n\n  var loggingOut = _ref6.loggingOut;\n  return React.createElement(SafeAreaProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 6\n    }\n  }, React.createElement(Drawer.Navigator, {\n    initialRouteName: Home,\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContentScrollView, _extends({}, props, {\n        __self: _this7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }\n      }), React.createElement(DrawerItemList, _extends({}, props, {\n        __self: _this7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }\n      })), React.createElement(DrawerItem, {\n        label: \"Log Out\",\n        onPress: function onPress() {\n          return handleLogOut(props, loggingOut);\n        },\n        __self: _this7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    options: {\n      drawerLabel: 'Home'\n    },\n    component: HomeStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Rates\",\n    options: {\n      drawerLabel: 'Rates'\n    },\n    component: RatesStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Report\",\n    options: {\n      drawerLabel: 'Report'\n    },\n    component: ReportStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"HowToUse\",\n    options: {\n      drawerLabel: 'Help'\n    },\n    component: HowToUseStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Contact\",\n    options: {\n      drawerLabel: 'Contact'\n    },\n    component: ContactStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 12,\n    borderRadius: 60,\n    marginVertical: 20\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff',\n    fontFamily: 'normal'\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loggingOut: function loggingOut() {\n      return dispatch(signOut());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(DrawerNagivation);","map":{"version":3,"sources":["D:/LogIn/screens/DrawerNagivation.js"],"names":["Contact","StatusBar","React","SafeAreaProvider","createBottomTabNavigator","MaterialCommunityIcons","Home","Rates","HowToUse","Report","NavigationContainer","createStackNavigator","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","signOut","connect","MapStack","Stack","Drawer","NavigationDrawerStructure","props","toggleDrawer","navigationProps","flexDirection","uri","width","height","marginLeft","ContactStack","navigation","title","headerLeft","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","textAlign","fontSize","HowToUseStack","RatesStack","ReportStack","HomeStack","handleLogOut","loggingOut","navigate","DrawerNagivation","drawerLabel","styles","StyleSheet","create","container","flex","alignItems","justifyContent","button","padding","borderRadius","marginVertical","buttonText","color","fontFamily","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import Contact from './Contact';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet,SafeAreaView, Text, TouchableOpacity, View, Image } from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport Home from './Home';\r\nimport Rates from './RatesScreen';\r\nimport HowToUse from './HowToUse';\r\nimport Report from './Report';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\r\nimport { signOut } from '../redux';\r\nimport { connect } from 'react-redux';\r\n//import Map from './Map'\r\n//import Inprogress from './Inprogress'\r\n//import Tracker from './Tracker'\r\n\r\n\r\n\r\nconst MapStack = createStackNavigator();\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst NavigationDrawerStructure = (props) => {\r\n  //Structure for the navigatin Drawer\r\n  const toggleDrawer = () => {\r\n    //Props to open/close the drawer\r\n    props.navigationProps.toggleDrawer();\r\n  };\r\n\r\n  return (\r\n    <View style={{ flexDirection: 'row' }}>\r\n      <TouchableOpacity onPress={toggleDrawer}>\r\n        {/*Donute Button Image */}\r\n        <Image\r\n          source={{\r\n            uri:\r\n              'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png',\r\n          }}\r\n          style={{ width: 25, height: 25, marginLeft: 5 }}\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nfunction ContactStack({ navigation }) {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Contact\"\r\n        component={Contact}\r\n        options={{\r\n          title: 'REPAIR DUKAAN', //Set Header Title\r\n          headerLeft: () => (\r\n            <NavigationDrawerStructure navigationProps={navigation} />\r\n          ),\r\n          headerStyle: {\r\n            backgroundColor: '#f4511e', //Set Header color\r\n          },\r\n          headerTintColor: '#fff', //Set Header text color\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n            textAlign : 'center', //Set Header text style\r\n            fontSize: 42\r\n          },\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction HowToUseStack({ navigation }) {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"How To Use\"\r\n        component={HowToUse}\r\n        options={{\r\n          title: 'REPAIR DUKAAN', //Set Header Title\r\n          headerLeft: () => (\r\n            <NavigationDrawerStructure navigationProps={navigation} />\r\n          ),\r\n          headerStyle: {\r\n            backgroundColor: '#f4511e', //Set Header color\r\n          },\r\n          headerTintColor: '#fff', //Set Header text color\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n            textAlign : 'center', //Set Header text style\r\n            fontSize: 42\r\n          },\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction RatesStack({ navigation }) {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Rates\"\r\n        component={Rates}\r\n        options={{\r\n          title: 'REPAIR DUKAAN', //Set Header Title\r\n          headerLeft: () => (\r\n            <NavigationDrawerStructure navigationProps={navigation} />\r\n          ),\r\n          headerStyle: {\r\n            backgroundColor: '#f4511e', //Set Header color\r\n          },\r\n          headerTintColor: '#fff', //Set Header text color\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n            textAlign : 'center', //Set Header text style\r\n            fontSize: 42\r\n          },\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction ReportStack({ navigation }) {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Report\"\r\n        component={Report}\r\n        options={{\r\n          title: 'REPAIR DUKAAN', //Set Header Title\r\n          headerLeft: () => (\r\n            <NavigationDrawerStructure navigationProps={navigation} />\r\n          ),\r\n          headerStyle: {\r\n            backgroundColor: '#f4511e', //Set Header color\r\n          },\r\n          headerTintColor: '#fff', //Set Header text color\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n            textAlign : 'center', //Set Header text style\r\n            fontSize: 42\r\n          },\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*function WaitStack({ navigation }) {\r\n  return (\r\n    <Stack.Navigator initialRouteName=\"Contact\">\r\n      <Stack.Screen\r\n        name=\"Wait\"\r\n        component={WaitScreen}\r\n        options={{\r\n          title: 'REPAIR DUKAAN', //Set Header Title\r\n          headerLeft: () => (\r\n            <NavigationDrawerStructure navigationProps={navigation} />\r\n          ),\r\n          headerStyle: {\r\n            backgroundColor: '#f4511e', //Set Header color\r\n          },\r\n          headerTintColor: '#fff', //Set Header text color\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n            textAlign : 'center', //Set Header text style\r\n            fontSize: 42\r\n          },\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}*/\r\n\r\n\r\n/*const MapStackScreen = ({navigation}) => (\r\n  <MapStack.Navigator screenOptions={{\r\n          headerStyle: {\r\n          backgroundColor: '#009387',\r\n          },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: {\r\n          fontWeight: 'bold'\r\n          }\r\n      }}>\r\n          <MapStack.Screen name=\"Map\" component={Map} options={{\r\n          title:'         RepairDukaan',\r\n          }} />\r\n                <MapStack.Screen name=\"Tracker\"  component = {Tracker} options={{\r\n          title:'         RepairDukaan',\r\n          }} />\r\n          <MapStack.Screen name=\"Inprogress\"  component = {Inprogress} options={{\r\n          title:'         RepairDukaan',\r\n          }} />\r\n  </MapStack.Navigator>\r\n  );*/\r\n\r\n\r\n\r\nfunction HomeStack({ navigation }) {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerLeft: () => (\r\n          <NavigationDrawerStructure navigationProps={navigation} />\r\n        ),\r\n        headerStyle: {\r\n          backgroundColor: '#f4511e', //Set Header color\r\n        },\r\n        headerTintColor: '#fff', //Set Header text color\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold', //Set Header text style\r\n          textAlign : 'center', //Set Header text style\r\n          fontSize: 42\r\n        },\r\n      }}>\r\n      <Stack.Screen\r\n        name=\"Home\"\r\n        component={Home}\r\n        options={{\r\n          title: 'REPAIR DUKAAN', //Set Header Title\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n\r\nconst handleLogOut = (props, loggingOut) => {\r\n  loggingOut()\r\n  props.navigation.navigate(\"LogIn\")\r\n}\r\n\r\n\r\n\r\nfunction DrawerNagivation({loggingOut}) {\r\n  return (\r\n     <SafeAreaProvider>\r\n      <Drawer.Navigator initialRouteName = {Home} drawerContent = {props => {\r\n         return (\r\n          <DrawerContentScrollView {...props}>\r\n            <DrawerItemList {...props} />\r\n            <DrawerItem label=\"Log Out\" onPress={() => handleLogOut(props, loggingOut)} />\r\n          </DrawerContentScrollView>\r\n        )\r\n      }}>\r\n        <Drawer.Screen\r\n          name=\"Home\"\r\n          options={{ drawerLabel: 'Home' }}\r\n          component={HomeStack}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"Rates\"\r\n          options={{ drawerLabel: 'Rates' }}\r\n          component={RatesStack}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"Report\"\r\n          options={{ drawerLabel: 'Report' }}\r\n          component={ReportStack}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"HowToUse\"\r\n          options={{ drawerLabel: 'Help' }}\r\n          component={HowToUseStack}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"Contact\"\r\n          options={{ drawerLabel: 'Contact' }}\r\n          component={ContactStack}\r\n        />\r\n        {/*(<Drawer.Screen\r\n          name = \"Map\"\r\n          options = {{drawerLabel: 'Map'}}\r\n          component = {MapStackScreen}\r\n        />*/}\r\n        \r\n      </Drawer.Navigator>    \r\n  \r\n       \r\n      \r\n    \r\n     </SafeAreaProvider>  \r\n  \r\n\r\n  );\r\n  \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: \"blue\",\r\n    padding: 12,\r\n    borderRadius: 60,\r\n    marginVertical: 20,\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: '#fff',\r\n    fontFamily: 'normal',\r\n  }, \r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loggingOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DrawerNagivation)"]},"metadata":{},"sourceType":"module"}