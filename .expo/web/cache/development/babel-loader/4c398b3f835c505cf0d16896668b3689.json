{"ast":null,"code":"var _jsxFileName = \"D:\\\\LogIn\\\\index.js\";\nimport { registerRootComponent } from 'expo';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport logInReducer from \"./reducers/logIn\";\nimport App from \"./App\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nvar store = createStore(logInReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default function Root() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }));\n}\nregisterRootComponent(\"App\");","map":{"version":3,"sources":["D:/LogIn/index.js"],"names":["registerRootComponent","createStore","Provider","logInReducer","App","store","window","__REDUX_DEVTOOLS_EXTENSION__","Root"],"mappings":";AAAA,SAASA,qBAAT,QAAsC,MAAtC;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,YAAP;AAEA,OAAOC,GAAP;;AAGA,IAAMC,KAAK,GAAGJ,WAAW,CAACE,YAAD,EAAgBG,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAAvD,CAAzB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC3B,SACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAIH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;AAKDL,qBAAqB,CAAC,KAAD,CAArB","sourcesContent":["import { registerRootComponent } from 'expo';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport logInReducer from './reducers/logIn'\n\nimport App from './App';\nimport { AppRegistry } from 'react-native';\n\nconst store = createStore(logInReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default function Root() {\n    return (\n        <Provider store = {store}>\n            <App />\n        </Provider>\n    );\n}\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(\"App\")"]},"metadata":{},"sourceType":"module"}